{"ast":null,"code":"const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nexport const fetchTodos = async () => {\n  const response = await fetch(`${API_URL}/todos`);\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  return await response.json();\n};\nexport const addTodo = async todo => {\n  const response = await fetch(`${API_URL}/todos`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(todo)\n  });\n  if (!response.ok) {\n    throw new Error('Failed to add task');\n  }\n  return await response.json();\n};\nexport const updateTodo = async (id, updates) => {\n  const response = await fetch(`${API_URL}/todos/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updates)\n  });\n  if (!response.ok) {\n    throw new Error('Failed to update task');\n  }\n};\nexport const deleteTodo = async id => {\n  const response = await fetch(`${API_URL}/todos/${id}`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) {\n    throw new Error('Failed to delete task');\n  }\n};","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","fetchTodos","response","fetch","ok","Error","json","addTodo","todo","method","headers","body","JSON","stringify","updateTodo","id","updates","deleteTodo"],"sources":["C:/Users/amzoughi/Desktop/Adam/test/todo-app/todo-app/src/api.js"],"sourcesContent":["const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nexport const fetchTodos = async () => {\r\n  const response = await fetch(`${API_URL}/todos`);\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n  return await response.json();\r\n};\r\n\r\nexport const addTodo = async (todo) => {\r\n  const response = await fetch(`${API_URL}/todos`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(todo)\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error('Failed to add task');\r\n  }\r\n  return await response.json();\r\n};\r\n\r\nexport const updateTodo = async (id, updates) => {\r\n  const response = await fetch(`${API_URL}/todos/${id}`, {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(updates)\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error('Failed to update task');\r\n  }\r\n};\r\n\r\nexport const deleteTodo = async (id) => {\r\n  const response = await fetch(`${API_URL}/todos/${id}`, {\r\n    method: 'DELETE'\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error('Failed to delete task');\r\n  }\r\n};"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,OAAO,QAAQ,CAAC;EAChD,IAAI,CAACK,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC9B,CAAC;AAED,OAAO,MAAMC,OAAO,GAAG,MAAOC,IAAI,IAAK;EACrC,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,OAAO,QAAQ,EAAE;IAC/CY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;EAC3B,CAAC,CAAC;EACF,IAAI,CAACN,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;EACvC;EACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC9B,CAAC;AAED,OAAO,MAAMQ,UAAU,GAAG,MAAAA,CAAOC,EAAE,EAAEC,OAAO,KAAK;EAC/C,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,OAAO,UAAUkB,EAAE,EAAE,EAAE;IACrDN,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACG,OAAO;EAC9B,CAAC,CAAC;EACF,IAAI,CAACd,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1C;AACF,CAAC;AAED,OAAO,MAAMY,UAAU,GAAG,MAAOF,EAAE,IAAK;EACtC,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,OAAO,UAAUkB,EAAE,EAAE,EAAE;IACrDN,MAAM,EAAE;EACV,CAAC,CAAC;EACF,IAAI,CAACP,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}