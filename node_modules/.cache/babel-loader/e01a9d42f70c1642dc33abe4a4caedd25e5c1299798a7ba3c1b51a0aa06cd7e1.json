{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amzoughi\\\\Desktop\\\\Adam\\\\test\\\\todo-app\\\\todo-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Task from './Task';\nimport TaskForm from './TaskForm';\nimport TaskFilters from './TaskFilters';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all');\n  const [darkMode, setDarkMode] = useState(false);\n\n  // Load tasks and theme preference\n  useEffect(() => {\n    const savedTasks = JSON.parse(localStorage.getItem('tasks'));\n    const savedTheme = localStorage.getItem('darkMode') === 'true';\n    if (savedTasks) setTasks(savedTasks);\n    setDarkMode(savedTheme);\n  }, []);\n\n  // Save tasks and theme preference\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n    localStorage.setItem('darkMode', darkMode);\n  }, [tasks, darkMode]);\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'active') return !task.completed;\n    if (filter === 'completed') return task.completed;\n    return true;\n  });\n  const addTask = (text, dueDate) => {\n    setTasks([{\n      id: Date.now(),\n      text,\n      dueDate,\n      completed: false,\n      createdAt: new Date().toISOString()\n    }, ...tasks]);\n  };\n  const updateTask = (id, updates) => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      ...updates\n    } : task));\n  };\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n  const clearCompleted = () => {\n    setTasks(tasks.filter(task => !task.completed));\n  };\n  const toggleTheme = () => {\n    setDarkMode(!darkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app ${darkMode ? 'dark' : 'light'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"app-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"TaskFlow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleTheme,\n          className: \"theme-toggle\",\n          \"aria-label\": \"Toggle dark mode\",\n          children: darkMode ? '‚òÄÔ∏è' : 'üåô'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-content\",\n        children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n          onAdd: addTask,\n          darkMode: darkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-board\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-columns\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-list-container\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"task-list\",\n                children: filteredTasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n                  task: task,\n                  onUpdate: updateTask,\n                  onDelete: deleteTask,\n                  darkMode: darkMode\n                }, task.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), tasks.length > 0 && /*#__PURE__*/_jsxDEV(TaskFilters, {\n          filter: filter,\n          setFilter: setFilter,\n          onClearCompleted: clearCompleted,\n          activeCount: tasks.filter(t => !t.completed).length,\n          darkMode: darkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nbze1/nBijLb+iyipqoFVKLYn0w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Task","TaskForm","TaskFilters","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","filter","setFilter","darkMode","setDarkMode","savedTasks","JSON","parse","localStorage","getItem","savedTheme","setItem","stringify","filteredTasks","task","completed","addTask","text","dueDate","id","Date","now","createdAt","toISOString","updateTask","updates","map","deleteTask","clearCompleted","toggleTheme","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onAdd","onUpdate","onDelete","length","onClearCompleted","activeCount","t","_c","$RefreshReg$"],"sources":["C:/Users/amzoughi/Desktop/Adam/test/todo-app/todo-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Task from './Task';\nimport TaskForm from './TaskForm';\nimport TaskFilters from './TaskFilters';\nimport './App.css';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all');\n  const [darkMode, setDarkMode] = useState(false);\n\n  // Load tasks and theme preference\n  useEffect(() => {\n    const savedTasks = JSON.parse(localStorage.getItem('tasks'));\n    const savedTheme = localStorage.getItem('darkMode') === 'true';\n    if (savedTasks) setTasks(savedTasks);\n    setDarkMode(savedTheme);\n  }, []);\n\n  // Save tasks and theme preference\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n    localStorage.setItem('darkMode', darkMode);\n  }, [tasks, darkMode]);\n\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'active') return !task.completed;\n    if (filter === 'completed') return task.completed;\n    return true;\n  });\n\nconst addTask = (text, dueDate) => {\n  setTasks([{ \n    id: Date.now(), \n    text, \n    dueDate, \n    completed: false,\n    createdAt: new Date().toISOString()\n  }, ...tasks]);\n};\n\n  const updateTask = (id, updates) => {\n    setTasks(tasks.map(task => \n      task.id === id ? { ...task, ...updates } : task\n    ));\n  };\n\n  const deleteTask = (id) => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  const clearCompleted = () => {\n    setTasks(tasks.filter(task => !task.completed));\n  };\n\n  const toggleTheme = () => {\n    setDarkMode(!darkMode);\n  };\n\n  return (\n    <div className={`app ${darkMode ? 'dark' : 'light'}`}>\n      <div className=\"container\">\n        <header className=\"app-header\">\n          <h1>TaskFlow</h1>\n          <button \n            onClick={toggleTheme}\n            className=\"theme-toggle\"\n            aria-label=\"Toggle dark mode\"\n          >\n            {darkMode ? '‚òÄÔ∏è' : 'üåô'}\n          </button>\n        </header>\n\n        <div className=\"app-content\">\n          <TaskForm onAdd={addTask} darkMode={darkMode} />\n          \n          <div className=\"task-board\">\n            <div className=\"task-columns\">\n              <div className=\"task-list-container\">\n                <ul className=\"task-list\">\n                  {filteredTasks.map(task => (\n                    <Task\n                      key={task.id}\n                      task={task}\n                      onUpdate={updateTask}\n                      onDelete={deleteTask}\n                      darkMode={darkMode}\n                    />\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          {tasks.length > 0 && (\n            <TaskFilters\n              filter={filter}\n              setFilter={setFilter}\n              onClearCompleted={clearCompleted}\n              activeCount={tasks.filter(t => !t.completed).length}\n              darkMode={darkMode}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}