{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amzoughi\\\\Desktop\\\\adam\\\\test\\\\todo-app\\\\todo-app\\\\src\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  onAdd\n}) => {\n  _s();\n  const [input, setInput] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    onAdd(input, dueDate);\n    setInput('');\n    setDueDate('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"task-form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"task-input\",\n        className: \"input-label\",\n        children: \"Add New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"task-input\",\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"What needs to be done today?\",\n          className: \"task-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: dueDate,\n          onChange: e => setDueDate(e.target.value),\n          className: \"date-input\",\n          min: new Date().toISOString().split('T')[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"add-task-btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), \"Add\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"b5grooz/l1fojEMGkECbfavVrQY=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskForm","onAdd","_s","input","setInput","dueDate","setDueDate","handleSubmit","e","preventDefault","trim","onSubmit","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","value","onChange","target","placeholder","required","min","Date","toISOString","split","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","_c","$RefreshReg$"],"sources":["C:/Users/amzoughi/Desktop/adam/test/todo-app/todo-app/src/TaskForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst TaskForm = ({ onAdd }) => {\r\n  const [input, setInput] = useState('');\r\n  const [dueDate, setDueDate] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!input.trim()) return;\r\n    onAdd(input, dueDate);\r\n    setInput('');\r\n    setDueDate('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"task-form-container\">\r\n      <div className=\"input-group\">\r\n        <label htmlFor=\"task-input\" className=\"input-label\">\r\n          Add New Task\r\n        </label>\r\n        <div className=\"input-wrapper\">\r\n          <input\r\n            id=\"task-input\"\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"What needs to be done today?\"\r\n            className=\"task-input\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"date\"\r\n            value={dueDate}\r\n            onChange={(e) => setDueDate(e.target.value)}\r\n            className=\"date-input\"\r\n            min={new Date().toISOString().split('T')[0]}\r\n          />\r\n          <button type=\"submit\" className=\"add-task-btn\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n            </svg>\r\n            Add\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}