{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amzoughi\\\\Desktop\\\\adam\\\\test\\\\todo-app\\\\todo-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Task from './Task';\nimport TaskForm from './TaskForm';\nimport TaskFilters from './TaskFilters';\nimport { fetchTodos, addTodo, updateTodo, deleteTodo } from './api';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all');\n  const [darkMode, setDarkMode] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Load tasks from Flask backend\n  useEffect(() => {\n    const loadTasks = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchTodos();\n        setTasks(data);\n        setError(null);\n      } catch (err) {\n        console.error(\"Failed to fetch tasks:\", err);\n        setError(\"Failed to load tasks. Please try again.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadTasks();\n  }, []);\n\n  // Add task through Flask\n  const addTask = async (text, dueDate) => {\n    try {\n      const newTask = await addTodo({\n        text,\n        dueDate: dueDate || null,\n        completed: false\n      });\n      setTasks([newTask, ...tasks]);\n    } catch (err) {\n      console.error(\"Failed to add task:\", err);\n      setError(\"Failed to add task. Please try again.\");\n    }\n  };\n\n  // Update task through Flask\n  const updateTask = async (id, updates) => {\n    try {\n      await updateTodo(id, updates);\n      setTasks(tasks.map(task => task.id === id ? {\n        ...task,\n        ...updates\n      } : task));\n    } catch (err) {\n      console.error(\"Failed to update task:\", err);\n      setError(\"Failed to update task. Please try again.\");\n    }\n  };\n\n  // Delete task through Flask\n  const deleteTask = async id => {\n    try {\n      await deleteTodo(id);\n      setTasks(tasks.filter(task => task.id !== id));\n    } catch (err) {\n      console.error(\"Failed to delete task:\", err);\n      setError(\"Failed to delete task. Please try again.\");\n    }\n  };\n\n  // Clear completed tasks\n  const clearCompleted = async () => {\n    try {\n      await Promise.all(tasks.filter(task => task.completed).map(task => deleteTodo(task.id)));\n      setTasks(tasks.filter(task => !task.completed));\n    } catch (err) {\n      console.error(\"Failed to clear completed tasks:\", err);\n      setError(\"Failed to clear completed tasks. Please try again.\");\n    }\n  };\n\n  // Toggle theme\n  const toggleTheme = () => {\n    setDarkMode(!darkMode);\n  };\n\n  // Filter tasks\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'active') return !task.completed;\n    if (filter === 'completed') return task.completed;\n    return true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app ${darkMode ? 'dark' : 'light'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"app-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"TaskFlow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleTheme,\n          className: \"theme-toggle\",\n          \"aria-label\": \"Toggle dark mode\",\n          children: darkMode ? '☀️' : '🌙'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-content\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n          onAdd: addTask,\n          darkMode: darkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"Loading tasks...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-board\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-columns\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-list-container\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"task-list\",\n                children: filteredTasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n                  task: task,\n                  onUpdate: updateTask,\n                  onDelete: deleteTask,\n                  darkMode: darkMode\n                }, task.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), tasks.length > 0 && /*#__PURE__*/_jsxDEV(TaskFilters, {\n          filter: filter,\n          setFilter: setFilter,\n          onClearCompleted: clearCompleted,\n          activeCount: tasks.filter(t => !t.completed).length,\n          darkMode: darkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JB+3Jn0K0NhFwta3VD/zB+oEwQU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Task","TaskForm","TaskFilters","fetchTodos","addTodo","updateTodo","deleteTodo","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","filter","setFilter","darkMode","setDarkMode","loading","setLoading","error","setError","loadTasks","data","err","console","addTask","text","dueDate","newTask","completed","updateTask","id","updates","map","task","deleteTask","clearCompleted","Promise","all","toggleTheme","filteredTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onAdd","onUpdate","onDelete","length","onClearCompleted","activeCount","t","_c","$RefreshReg$"],"sources":["C:/Users/amzoughi/Desktop/adam/test/todo-app/todo-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Task from './Task';\nimport TaskForm from './TaskForm';\nimport TaskFilters from './TaskFilters';\nimport { fetchTodos, addTodo, updateTodo, deleteTodo } from './api';\nimport './App.css';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all');\n  const [darkMode, setDarkMode] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Load tasks from Flask backend\n  useEffect(() => {\n    const loadTasks = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchTodos();\n        setTasks(data);\n        setError(null);\n      } catch (err) {\n        console.error(\"Failed to fetch tasks:\", err);\n        setError(\"Failed to load tasks. Please try again.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadTasks();\n  }, []);\n\n  // Add task through Flask\n  const addTask = async (text, dueDate) => {\n    try {\n      const newTask = await addTodo({\n        text,\n        dueDate: dueDate || null,\n        completed: false\n      });\n      setTasks([newTask, ...tasks]);\n    } catch (err) {\n      console.error(\"Failed to add task:\", err);\n      setError(\"Failed to add task. Please try again.\");\n    }\n  };\n\n  // Update task through Flask\n  const updateTask = async (id, updates) => {\n    try {\n      await updateTodo(id, updates);\n      setTasks(tasks.map(task => \n        task.id === id ? { ...task, ...updates } : task\n      ));\n    } catch (err) {\n      console.error(\"Failed to update task:\", err);\n      setError(\"Failed to update task. Please try again.\");\n    }\n  };\n\n  // Delete task through Flask\n  const deleteTask = async (id) => {\n    try {\n      await deleteTodo(id);\n      setTasks(tasks.filter(task => task.id !== id));\n    } catch (err) {\n      console.error(\"Failed to delete task:\", err);\n      setError(\"Failed to delete task. Please try again.\");\n    }\n  };\n\n  // Clear completed tasks\n  const clearCompleted = async () => {\n    try {\n      await Promise.all(\n        tasks\n          .filter(task => task.completed)\n          .map(task => deleteTodo(task.id))\n      );\n      setTasks(tasks.filter(task => !task.completed));\n    } catch (err) {\n      console.error(\"Failed to clear completed tasks:\", err);\n      setError(\"Failed to clear completed tasks. Please try again.\");\n    }\n  };\n\n  // Toggle theme\n  const toggleTheme = () => {\n    setDarkMode(!darkMode);\n  };\n\n  // Filter tasks\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'active') return !task.completed;\n    if (filter === 'completed') return task.completed;\n    return true;\n  });\n\n  return (\n    <div className={`app ${darkMode ? 'dark' : 'light'}`}>\n      <div className=\"container\">\n        <header className=\"app-header\">\n          <h1>TaskFlow</h1>\n          <button \n            onClick={toggleTheme}\n            className=\"theme-toggle\"\n            aria-label=\"Toggle dark mode\"\n          >\n            {darkMode ? '☀️' : '🌙'}\n          </button>\n        </header>\n\n        <div className=\"app-content\">\n          {error && <div className=\"error-message\">{error}</div>}\n          \n          <TaskForm onAdd={addTask} darkMode={darkMode} />\n          \n          {loading ? (\n            <div className=\"loading\">Loading tasks...</div>\n          ) : (\n            <div className=\"task-board\">\n              <div className=\"task-columns\">\n                <div className=\"task-list-container\">\n                  <ul className=\"task-list\">\n                    {filteredTasks.map(task => (\n                      <Task\n                        key={task.id}\n                        task={task}\n                        onUpdate={updateTask}\n                        onDelete={deleteTask}\n                        darkMode={darkMode}\n                      />\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {tasks.length > 0 && (\n            <TaskFilters\n              filter={filter}\n              setFilter={setFilter}\n              onClearCompleted={clearCompleted}\n              activeCount={tasks.filter(t => !t.completed).length}\n              darkMode={darkMode}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}